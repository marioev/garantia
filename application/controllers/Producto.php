<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Producto extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Producto_model');
    } 

    /*
     * Listing of producto
     */
    function index()
    {
        $data['producto'] = $this->Producto_model->get_all_producto();
        
        $data['_view'] = 'producto/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new producto
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'estado_id' => $this->input->post('estado_id'),
				'categoria_id' => $this->input->post('categoria_id'),
				'presentacion_id' => $this->input->post('presentacion_id'),
				'moneda_id' => $this->input->post('moneda_id'),
				'producto_codigo' => $this->input->post('producto_codigo'),
				'producto_codigobarra' => $this->input->post('producto_codigobarra'),
				'producto_foto' => $this->input->post('producto_foto'),
				'producto_nombre' => $this->input->post('producto_nombre'),
				'producto_unidad' => $this->input->post('producto_unidad'),
				'producto_marca' => $this->input->post('producto_marca'),
				'producto_industria' => $this->input->post('producto_industria'),
				'producto_costo' => $this->input->post('producto_costo'),
				'producto_precio' => $this->input->post('producto_precio'),
				'producto_comision' => $this->input->post('producto_comision'),
				'producto_tipocambio' => $this->input->post('producto_tipocambio'),
				'producto_cantidadminima' => $this->input->post('producto_cantidadminima'),
				'producto_factor' => $this->input->post('producto_factor'),
				'producto_unidadfactor' => $this->input->post('producto_unidadfactor'),
				'producto_codigofactor' => $this->input->post('producto_codigofactor'),
				'producto_preciofactor' => $this->input->post('producto_preciofactor'),
				'producto_factor1' => $this->input->post('producto_factor1'),
				'producto_unidadfactor1' => $this->input->post('producto_unidadfactor1'),
				'producto_codigofactor1' => $this->input->post('producto_codigofactor1'),
				'producto_preciofactor1' => $this->input->post('producto_preciofactor1'),
				'producto_factor2' => $this->input->post('producto_factor2'),
				'producto_unidadfactor2' => $this->input->post('producto_unidadfactor2'),
				'producto_codigofactor2' => $this->input->post('producto_codigofactor2'),
				'producto_preciofactor2' => $this->input->post('producto_preciofactor2'),
				'producto_factor3' => $this->input->post('producto_factor3'),
				'producto_unidadfactor3' => $this->input->post('producto_unidadfactor3'),
				'producto_codigofactor3' => $this->input->post('producto_codigofactor3'),
				'producto_preciofactor3' => $this->input->post('producto_preciofactor3'),
				'producto_factor4' => $this->input->post('producto_factor4'),
				'producto_unidadfactor4' => $this->input->post('producto_unidadfactor4'),
				'producto_codigofactor4' => $this->input->post('producto_codigofactor4'),
				'producto_preciofactor4' => $this->input->post('producto_preciofactor4'),
				'producto_ultimocosto' => $this->input->post('producto_ultimocosto'),
				'producto_envase' => $this->input->post('producto_envase'),
				'producto_nombreenvase' => $this->input->post('producto_nombreenvase'),
				'producto_costoenvase' => $this->input->post('producto_costoenvase'),
				'producto_precioenvase' => $this->input->post('producto_precioenvase'),
				'destino_id' => $this->input->post('destino_id'),
				'producto_principioact' => $this->input->post('producto_principioact'),
				'producto_accionterap' => $this->input->post('producto_accionterap'),
				'producto_cantidadenvase' => $this->input->post('producto_cantidadenvase'),
				'subcategoria_id' => $this->input->post('subcategoria_id'),
				'producto_unidadentera' => $this->input->post('producto_unidadentera'),
				'producto_catalogo' => $this->input->post('producto_catalogo'),
				'producto_caracteristicas' => $this->input->post('producto_caracteristicas'),
            );
            
            $producto_id = $this->Producto_model->add_producto($params);
            redirect('producto/index');
        }
        else
        {            
            $data['_view'] = 'producto/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a producto
     */
    function edit($producto_id)
    {   
        // check if the producto exists before trying to edit it
        $data['producto'] = $this->Producto_model->get_producto($producto_id);
        
        if(isset($data['producto']['producto_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'estado_id' => $this->input->post('estado_id'),
					'categoria_id' => $this->input->post('categoria_id'),
					'presentacion_id' => $this->input->post('presentacion_id'),
					'moneda_id' => $this->input->post('moneda_id'),
					'producto_codigo' => $this->input->post('producto_codigo'),
					'producto_codigobarra' => $this->input->post('producto_codigobarra'),
					'producto_foto' => $this->input->post('producto_foto'),
					'producto_nombre' => $this->input->post('producto_nombre'),
					'producto_unidad' => $this->input->post('producto_unidad'),
					'producto_marca' => $this->input->post('producto_marca'),
					'producto_industria' => $this->input->post('producto_industria'),
					'producto_costo' => $this->input->post('producto_costo'),
					'producto_precio' => $this->input->post('producto_precio'),
					'producto_comision' => $this->input->post('producto_comision'),
					'producto_tipocambio' => $this->input->post('producto_tipocambio'),
					'producto_cantidadminima' => $this->input->post('producto_cantidadminima'),
					'producto_factor' => $this->input->post('producto_factor'),
					'producto_unidadfactor' => $this->input->post('producto_unidadfactor'),
					'producto_codigofactor' => $this->input->post('producto_codigofactor'),
					'producto_preciofactor' => $this->input->post('producto_preciofactor'),
					'producto_factor1' => $this->input->post('producto_factor1'),
					'producto_unidadfactor1' => $this->input->post('producto_unidadfactor1'),
					'producto_codigofactor1' => $this->input->post('producto_codigofactor1'),
					'producto_preciofactor1' => $this->input->post('producto_preciofactor1'),
					'producto_factor2' => $this->input->post('producto_factor2'),
					'producto_unidadfactor2' => $this->input->post('producto_unidadfactor2'),
					'producto_codigofactor2' => $this->input->post('producto_codigofactor2'),
					'producto_preciofactor2' => $this->input->post('producto_preciofactor2'),
					'producto_factor3' => $this->input->post('producto_factor3'),
					'producto_unidadfactor3' => $this->input->post('producto_unidadfactor3'),
					'producto_codigofactor3' => $this->input->post('producto_codigofactor3'),
					'producto_preciofactor3' => $this->input->post('producto_preciofactor3'),
					'producto_factor4' => $this->input->post('producto_factor4'),
					'producto_unidadfactor4' => $this->input->post('producto_unidadfactor4'),
					'producto_codigofactor4' => $this->input->post('producto_codigofactor4'),
					'producto_preciofactor4' => $this->input->post('producto_preciofactor4'),
					'producto_ultimocosto' => $this->input->post('producto_ultimocosto'),
					'producto_envase' => $this->input->post('producto_envase'),
					'producto_nombreenvase' => $this->input->post('producto_nombreenvase'),
					'producto_costoenvase' => $this->input->post('producto_costoenvase'),
					'producto_precioenvase' => $this->input->post('producto_precioenvase'),
					'destino_id' => $this->input->post('destino_id'),
					'producto_principioact' => $this->input->post('producto_principioact'),
					'producto_accionterap' => $this->input->post('producto_accionterap'),
					'producto_cantidadenvase' => $this->input->post('producto_cantidadenvase'),
					'subcategoria_id' => $this->input->post('subcategoria_id'),
					'producto_unidadentera' => $this->input->post('producto_unidadentera'),
					'producto_catalogo' => $this->input->post('producto_catalogo'),
					'producto_caracteristicas' => $this->input->post('producto_caracteristicas'),
                );

                $this->Producto_model->update_producto($producto_id,$params);            
                redirect('producto/index');
            }
            else
            {
                $data['_view'] = 'producto/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The producto you are trying to edit does not exist.');
    } 

    /*
     * Deleting producto
     */
    function remove($producto_id)
    {
        $producto = $this->Producto_model->get_producto($producto_id);

        // check if the producto exists before trying to delete it
        if(isset($producto['producto_id']))
        {
            $this->Producto_model->delete_producto($producto_id);
            redirect('producto/index');
        }
        else
            show_error('The producto you are trying to delete does not exist.');
    }
    
}
